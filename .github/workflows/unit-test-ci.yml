name: CI

on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install dependencies and run tests
        run: mvn clean test

      - name: Get modified Java files
        id: get_files
        run: |
          git fetch origin main
          FILES=$(git diff --name-only origin/main...$(git rev-parse HEAD) -- '*.java')
          echo "FILES<<EOF" >> $GITHUB_ENV
          echo "$FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Extract coverage data
        id: extract_coverage
        run: |
          FILES="${{ env.FILES }}"
          COVERAGE_TABLE="| Package | File | Coverage |\n| :--- | :--- | :--- |\n"
          for FILE in $FILES; do
            PACKAGE=$(dirname "$FILE" | sed 's|src/main/java/||;s|/|.|g')
            CLASS_NAME=$(basename "$FILE" .java)
            COVERAGE=$(awk -F, -v class="$CLASS_NAME" '$3 == class {print ($5 * 100) / ($4 + $5) "%"}' target/site/jacoco/jacoco.csv)

            COVERAGE=${COVERAGE:-"No coverage data%"}
            COVERAGE_TABLE+="| $PACKAGE | $CLASS_NAME | $COVERAGE |\n"
          done
          echo -e "$COVERAGE_TABLE" >> $GITHUB_ENV

      - name: Get coverage percentage
        id: coverage
        run: |
          COVERAGE=$(grep -oP '(?<=class="ctr2">)[0-9]+(?=\s*%)' target/site/jacoco/index.html | tail -1)
          echo "coverage=${COVERAGE}" >> $GITHUB_ENV

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/*.xml

      - name: Comment on PR
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            | Name                        | Status | Coverage | Updated (UTC)            |
            | :-------------------------- | :----- | :------- | :----------------------- |
            | **JUnit tests**            | ${{ job.status == 'success' && '✅ Passed' || '❌ Failed' }} | ${{ env.coverage }}%  | ${{ github.event.pull_request.updated_at }} |
            ${{ env.coverage_table }}
